plugins:
  - rubocop-rspec

AllCops:
  TargetRubyVersion: 3.4
  NewCops: enable
  SuggestExtensions: false
  Exclude:
    - 'vendor/**/*'
    - 'bin/**/*'
    - 'tmp/**/*'
    - 'spec/dummy/**/*'

# Disable some overly strict rules
Style/Documentation:
  Enabled: false

Style/StringLiterals:
  EnforcedStyle: double_quotes

Style/StringLiteralsInInterpolation:
  EnforcedStyle: double_quotes

Layout/LineLength:
  Max: 120
  Exclude:
    - 'spec/**/*'
    - '*.gemspec'

Metrics/BlockLength:
  Exclude:
    - 'spec/**/*'
    - '*.gemspec'
    - 'Rakefile'
  AllowedMethods:
    - 'class_methods'

Metrics/MethodLength:
  Max: 30
  Exclude:
    - 'spec/**/*'

Metrics/ClassLength:
  Max: 120
  Exclude:
    - 'spec/**/*'

Metrics/AbcSize:
  Max: 40
  Exclude:
    - 'spec/**/*'

Metrics/CyclomaticComplexity:
  Max: 15

Metrics/PerceivedComplexity:
  Max: 15

# RSpec specific
RSpec/ExampleLength:
  Max: 30

RSpec/MultipleExpectations:
  Max: 10

RSpec/NestedGroups:
  Max: 4

RSpec/DescribeClass:
  Exclude:
    - 'spec/integration/**/*'
    - 'spec/**/*compatibility*'
    - 'spec/**/*integration*'

RSpec/SpecFilePathFormat:
  Enabled: false

RSpec/IndexedLet:
  Enabled: false

RSpec/StubbedMock:
  Enabled: false

RSpec/MessageSpies:
  Enabled: false

RSpec/IdenticalEqualityAssertion:
  Enabled: false

RSpec/ExpectActual:
  Enabled: false

Style/FrozenStringLiteralComment:
  Enabled: true
  EnforcedStyle: always

# Disable gemspec cops that conflict with gem practices
Gemspec/DevelopmentDependencies:
  Enabled: false

Gemspec/RequireMFA:
  Enabled: false

# Allow predicate method names
Naming/PredicateName:
  Enabled: false

Naming/VariableNumber:
  Enabled: false
